@using EgyptianeInvoicing.Shared.Enums
@{
    ViewData["Title"] = localizer["Invoices"];
}

<partial name="~/views/Partial/_SelectedCompanyPartial.cshtml" />
<div class="row mb-3">
    <div class="col-md-12">
        <a href="/Invoices/Create" class="btn btn-success">@localizer["Create New Invoice"]</a>
    </div>
</div>
<div class="row mb-3">
    <div class="col-md-3">
        <label for="SubmissionDateFrom" class="form-label">@localizer["Submission Date From"]</label>
        <input type="date" class="form-control" id="SubmissionDateFrom" name="SubmissionDateFrom">
    </div>
    <div class="col-md-3">
        <label for="SubmissionDateTo" class="form-label">@localizer["Submission Date To"]</label>
        <input type="date" class="form-control" id="SubmissionDateTo" name="SubmissionDateTo">
    </div>
    <div class="col-md-3">
        <label for="EInvoiceId" class="form-label">@localizer["EInvoice ID"]</label>
        <input type="text" class="form-control" id="EInvoiceId" name="EInvoiceId">
    </div>

</div>
<div class="row mb-3">
    <div class="col-md-3">
        <label for="Status" class="form-label">@localizer["Status"]</label>
        <select class="form-control" id="Status" name="Status">
            <option value="">@localizer["-- Select Status --"]</option>
            @foreach (var status in Enum.GetValues(typeof(InvoiceStatus)).Cast<InvoiceStatus>())
            {
                <option value="@status">@localizer[status.ToString()]</option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <label for="DocumentType" class="form-label">@localizer["Document Type"]</label>
        <select class="form-control" id="DocumentType" name="DocumentType">
            <option value="">@localizer["-- Select Document Type --"]</option>
            @foreach (var docType in Enum.GetValues(typeof(DocumentType)).Cast<DocumentType>())
            {
                <option value="@docType">@localizer[docType.ToString()]</option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <label for="ReceiverType" class="form-label">@localizer["Receiver Type"]</label>
        <select class="form-control" id="ReceiverType" name="ReceiverType">
            <option value="">@localizer["-- Select Receiver Type --"]</option>
            @foreach (var recType in Enum.GetValues(typeof(CompanyType)).Cast<CompanyType>())
            {
                <option value="@recType">@localizer[recType.ToString()]</option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <label for="ReceiverId" class="form-label">@localizer["Receiver ID"]</label>
        <input type="text" class="form-control" id="ReceiverId" name="ReceiverId">
    </div>
</div>
<div class="row mb-3">
    <div class="col-md-3">
        <label for="IssuerType" class="form-label">@localizer["Issuer Type"]</label>
        <select class="form-control" id="IssuerType" name="IssuerType">
            <option value="">@localizer["-- Select Issuer Type --"]</option>
            @foreach (var issType in Enum.GetValues(typeof(CompanyType)).Cast<CompanyType>())
            {
                <option value="@issType">@localizer[issType.ToString()]</option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <label for="IssuerId" class="form-label">@localizer["Issuer ID"]</label>
        <input type="text" class="form-control" id="IssuerId" name="IssuerId">
    </div>
</div>
<button type="submit" class="btn btn-primary">@localizer["Search"]</button>

<table id="InvoicesTable" class="table" style="width:100%">
    <thead>
        <tr>
            <th>@localizer["#"]</th>
            <th>@localizer["Submission Date"]</th>
            <th>@localizer["Invoice Number"]</th>
            <th>@localizer["Document Type"]</th>
            <th>@localizer["Issuer"]</th>
            <th>@localizer["Receiver"]</th>
            <th>@localizer["TotalSales"]</th>
            <th>@localizer["TotalTaxes"]</th>
            <th>@localizer["Total"]</th>
            <th>@localizer["Actions"]</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<script>
    var localizationStrings = {
        "search": "@localizer["datatable_search"]",
        "lengthMenu": "@localizer["datatable_lengthMenu"]",
        "info": "@localizer["datatable_info"]",
        "infoEmpty": "@localizer["datatable_infoEmpty"]",
        "infoFiltered": "@localizer["datatable_infoFiltered"]",
        "zeroRecords": "@localizer["datatable_zeroRecords"]",
        "paginate": {
            "first": "@localizer["datatable_paginate_first"]",
            "previous": "@localizer["datatable_paginate_previous"]",
            "next": "@localizer["datatable_paginate_next"]",
            "last": "@localizer["datatable_paginate_last"]"
        }
    };
    $(document).ready(function () {
        var invoicesTable = $('#InvoicesTable').DataTable({
            processing: true,
            serverSide: true,
            ajax: {
                url: '/Invoices/LoadInvoices',
                type: 'GET',
                dataType: 'json',
                data: function (d) {
                    d.SubmissionDateFrom = $('#SubmissionDateFrom').val();
                    d.SubmissionDateTo = $('#SubmissionDateTo').val();
                    d.Status = $('#Status').val();
                    d.DocumentType = $('#DocumentType').val();
                    d.ReceiverType = $('#ReceiverType').val();
                    d.ReceiverId = $('#ReceiverId').val();
                    d.IssuerType = $('#IssuerType').val();
                    d.IssuerId = $('#IssuerId').val();
                    d.EInvoiceId = $('#EInvoiceId').val();
                }
            },
            columns: [
                { data: 'serial' },
                { data: 'submissionDate' },
                { data: 'internalID' },
                { data: 'documentType' },
                { data: 'issuer' },
                { data: 'receiver' },
                { data: 'totalSales' },
                { data: 'totalTaxes' },
                { data: 'total' },
                {
                    data: null,
                    render: function (data, type, row) {
                        var editBtn = '<button type="button" class="btn btn-primary btn-sm edit-btn">@localizer["Edit"]</button>';
                        var deleteBtn = '<button type="button" class="btn btn-danger btn-sm delete-btn">@localizer["Delete"]</button>';
                        var printBtn = '<button type="button" class="btn btn-info btn-sm print-btn">@localizer["Print"]</button>';
                        return editBtn + '&nbsp;' + deleteBtn + '&nbsp;' + printBtn;
                    }
                }
            ],
            "language": localizationStrings
           
        });

        $('button[type="submit"]').on('click', function (e) {
            e.preventDefault();
            invoicesTable.ajax.reload();
        });

        $('#InvoicesTable tbody').on('click', '.edit-btn', function () {
            var data = invoicesTable.row($(this).parents('tr')).data();
            editInvoice(data);
        });

        $('#InvoicesTable tbody').on('click', '.delete-btn', function () {
            var data = invoicesTable.row($(this).parents('tr')).data();
            deleteInvoice(data);
        });

        $('#InvoicesTable tbody').on('click', '.print-btn', function () {
            var data = invoicesTable.row($(this).parents('tr')).data();
            printInvoice(data);
        });

        function editInvoice(data) {
            Swal.fire({
                title: '@localizer["Are you sure?"]',
                text: '@localizer["Do you want to edit this invoice?"]',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@localizer["Yes, edit it!"]',
                cancelButtonText: '@localizer["Cancel"]'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Invoices/Edit/' + data.internalID,
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        success: function (response) {
                            Swal.fire(
                                '@localizer["Edited!"]',
                                '@localizer["Invoice has been edited successfully."]',
                                'success'
                            );
                            invoicesTable.ajax.reload();
                        },
                        error: function (xhr, status, error) {
                            Swal.fire(
                                '@localizer["Error!"]',
                                '@localizer["An error occurred while editing invoice."]',
                                'error'
                            );
                        }
                    });
                }
            });
        }

        function deleteInvoice(data) {
            Swal.fire({
                title: '@localizer["Are you sure?"]',
                text: '@localizer["You won\'t be able to revert this!"]',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@localizer["Yes, delete it!"]',
                cancelButtonText: '@localizer["Cancel"]'
            }).then((result) => {
                if (result.isConfirmed) {
                    invoicesTable.ajax.reload();
                }
            });
        }

        function printInvoice(data) {
            Swal.fire({
                title: '@localizer["Print Invoice?"]',
                text: '@localizer["Are you sure you want to print this invoice?"]',
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '@localizer["Yes, print it!"]',
                cancelButtonText: '@localizer["Cancel"]'
            }).then((result) => {
                if (result.isConfirmed) {
                    console.log('Print confirmed for row with data:', data);
                }
            });
        }

    });
</script>


